import{r as t,h as s,H as a}from"./p-73696195.js";import{Logger as e,Hub as i}from"@aws-amplify/core";import{A as r}from"./p-417bb5ea.js";import{appendToCognitoUserAgent as o,Auth as n}from"@aws-amplify/auth";import"./p-78e8feee.js";import{T as h,U as c,A as l,R as u,N as m,c as p}from"./p-50fc1c0c.js";import{d as f,o as d}from"./p-6b3bc6eb.js";import{c as g}from"./p-fca20fdc.js";const y=new e("Authenticator"),w=class{constructor(s){t(this,s),this.initialAuthState=r.SignIn,this.handleAuthStateChange=()=>{},this.authState=r.Loading,this.toastMessage="",this.handleExternalAuthEvent=({payload:t})=>{switch(t.event){case"cognitoHostedUI":case"signIn":g(t.data,f);break;case"cognitoHostedUI_failure":case"parsingUrl_failure":case"signOut":case"customGreetingSignOut":return f(this.initialAuthState)}},this.handleToastEvent=({payload:t})=>{switch(t.event){case h:t.message&&(this.toastMessage=t.message)}}}async componentWillLoad(){d((t,s)=>{this.onAuthStateChange(t,s),this.toastMessage=""}),i.listen(c,this.handleToastEvent),i.listen(l,this.handleExternalAuthEvent),o("amplify-authenticator");const t=localStorage.getItem(u);localStorage.removeItem(u),"true"!==t&&await this.checkUser()}async checkUser(){if(!n||"function"!=typeof n.currentAuthenticatedUser)throw new Error(m);try{const t=await n.currentAuthenticatedUser();f(r.SignedIn,t)}catch(t){let s=null;try{s=localStorage.getItem(p)}catch(t){y.debug("Failed to get the auth state from local storage",t)}try{s===r.SignedIn&&await n.signOut(),f(this.initialAuthState)}catch(t){y.debug("Failed to sign out",t)}}}async onAuthStateChange(t,s){if(void 0===t)return y.error("nextAuthState cannot be undefined");y.info("Inside onAuthStateChange Method current authState:",this.authState),this.authState=t===r.SignedOut?this.initialAuthState:t,this.authData=s,this.authData&&y.log("Auth Data was set:",this.authData),this.authState===t&&(this.handleAuthStateChange(this.authState,this.authData),y.info("authState has been updated to "+this.authState))}renderAuthComponent(t){switch(t){case r.SignIn:return s("slot",{name:"sign-in"},s("amplify-sign-in",{federated:this.federated,usernameAlias:this.usernameAlias}));case r.ConfirmSignIn:return s("slot",{name:"confirm-sign-in"},s("amplify-confirm-sign-in",{user:this.authData}));case r.SignUp:return s("slot",{name:"sign-up"},s("amplify-sign-up",{usernameAlias:this.usernameAlias}));case r.ConfirmSignUp:return s("slot",{name:"confirm-sign-up"},s("amplify-confirm-sign-up",{user:this.authData,usernameAlias:this.usernameAlias}));case r.ForgotPassword:return s("slot",{name:"forgot-password"},s("amplify-forgot-password",{usernameAlias:this.usernameAlias}));case r.ResetPassword:return s("slot",{name:"require-new-password"},s("amplify-require-new-password",{user:this.authData}));case r.VerifyContact:return s("slot",{name:"verify-contact"},s("amplify-verify-contact",{user:this.authData}));case r.TOTPSetup:return s("slot",{name:"totp-setup"},s("amplify-totp-setup",{user:this.authData}));case r.Loading:return s("slot",{name:"loading"},s("div",null,"Loading..."));case r.SignedIn:return[s("slot",{name:"greetings"}),s("slot",null)];default:throw new Error("Unhandled auth state: "+t)}}componentWillUnload(){return i.remove(l,this.handleExternalAuthEvent),i.remove(c,this.handleToastEvent),d}render(){return s(a,null,this.toastMessage?s("amplify-toast",{message:this.toastMessage,handleClose:()=>{this.toastMessage=""},"data-test":"authenticator-error"}):null,this.renderAuthComponent(this.authState))}};w.style=":host{--background-color:var(--amplify-background-color);--width:28.75rem;--min-width:20rem;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}";export{w as amplify_authenticator}