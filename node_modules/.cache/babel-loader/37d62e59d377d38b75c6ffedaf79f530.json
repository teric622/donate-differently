{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Route9Library\\\\Documents\\\\Codedifferently\\\\donate-differently\\\\src\\\\components\\\\UtilitiesContainer\\\\CommentBox.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport default class CommentBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showComments: false,\n      comments: [{\n        id: 1,\n        author: \"landiggity\",\n        body: \"This is my first comment on this forum.\"\n      }, {\n        id: 2,\n        author: \"scarlett-jo\",\n        body: \"That's a mighty fine comment you've got there my good looking fellow...\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }]\n    };\n  }\n\n  render() {\n    const comments = this._getComments();\n\n    let commentNodes;\n    let buttonText = 'Show Comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }\n      }, comments);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"Join the Discussion!\"), /*#__PURE__*/React.createElement(CommentForm, {\n      addComment: this._addComment.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"comment-reveal\",\n      onClick: this._handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, buttonText), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"comment-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, this._getCommentsTitle(comments.length)), commentNodes);\n  } // end render\n\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return /*#__PURE__*/React.createElement(Comment, {\n        author: comment.author,\n        body: comment.body,\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      });\n    });\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n\n} // end CommentBox component\n\nclass CommentForm extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this._handleSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-form-fields\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Name\",\n      required: true,\n      ref: input => this._author = input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 94\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Comment\",\n      rows: \"4\",\n      required: true,\n      ref: textarea => this._body = textarea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-form-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Post Comment\")));\n  } // end render\n\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n\n} // end CommentForm component\n\n\nclass Comment extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"comment-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, this.props.author), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"comment-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, \"- \", this.props.body), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"comment-footer-delete\",\n      onClick: this._deleteComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Delete Comment\")));\n  }\n\n  _deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Route9Library/Documents/Codedifferently/donate-differently/src/components/UtilitiesContainer/CommentBox.js"],"names":["React","Component","Link","CommentBox","constructor","state","showComments","comments","id","author","body","render","_getComments","commentNodes","buttonText","_addComment","bind","_handleClick","_getCommentsTitle","length","comment","setState","concat","map","commentCount","CommentForm","_handleSubmit","input","_author","textarea","_body","event","preventDefault","props","addComment","value","Comment","_deleteComment","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class CommentBox extends Component {\r\n    constructor() {\r\n      super();\r\n      \r\n      this.state = {\r\n        showComments: false,\r\n        comments: [\r\n          {id: 1, author: \"landiggity\", body: \"This is my first comment on this forum.\"},\r\n          {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\r\n          {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"}\r\n        ]\r\n      };\r\n    }\r\n    \r\n    render () {\r\n      const comments = this._getComments();\r\n      let commentNodes;\r\n      let buttonText = 'Show Comments';\r\n      \r\n      if (this.state.showComments) {\r\n        buttonText = 'Hide Comments';\r\n        commentNodes = <div className=\"comment-list\">{comments}</div>;\r\n      }\r\n      \r\n      return(\r\n        <div className=\"comment-box\">\r\n          <h2>Join the Discussion!</h2>\r\n          <CommentForm addComment={this._addComment.bind(this)}/>\r\n          <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\r\n            {buttonText}\r\n          </button>\r\n          <h3>Comments</h3>\r\n          <h4 className=\"comment-count\">\r\n            {this._getCommentsTitle(comments.length)}\r\n          </h4>\r\n          {commentNodes}\r\n        </div>  \r\n      );\r\n    } // end render\r\n    \r\n    _addComment(author, body) {\r\n      const comment = {\r\n        id: this.state.comments.length + 1,\r\n        author,\r\n        body\r\n      };\r\n      this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\r\n    }\r\n    \r\n    _handleClick() {\r\n      this.setState({\r\n        showComments: !this.state.showComments\r\n      });\r\n    }\r\n    \r\n    _getComments() {    \r\n      return this.state.comments.map((comment) => { \r\n        return (\r\n          <Comment \r\n            author={comment.author} \r\n            body={comment.body} \r\n            key={comment.id} />\r\n        ); \r\n      });\r\n    }\r\n    \r\n    _getCommentsTitle(commentCount) {\r\n      if (commentCount === 0) {\r\n        return 'No comments yet';\r\n      } else if (commentCount === 1) {\r\n        return \"1 comment\";\r\n      } else {\r\n        return `${commentCount} comments`;\r\n      }\r\n    }\r\n  } // end CommentBox component\r\n  \r\n  class CommentForm extends React.Component {\r\n    render() {\r\n      return (\r\n        <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\r\n          <div className=\"comment-form-fields\">\r\n            <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\r\n            <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\r\n          </div>\r\n          <div className=\"comment-form-actions\">\r\n            <button type=\"submit\">Post Comment</button>\r\n          </div>\r\n        </form>\r\n      );\r\n    } // end render\r\n    \r\n    _handleSubmit(event) { \r\n      event.preventDefault();   // prevents page from reloading on submit\r\n      let author = this._author;\r\n      let body = this._body;\r\n      this.props.addComment(author.value, body.value);\r\n    }\r\n  } // end CommentForm component\r\n  \r\n  class Comment extends React.Component {\r\n    render () {\r\n      return(\r\n        <div className=\"comment\">\r\n          <p className=\"comment-header\">{this.props.author}</p>\r\n          <p className=\"comment-body\">- {this.props.body}</p>\r\n          <div className=\"comment-footer\">\r\n            <a href=\"#\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    _deleteComment() {\r\n      alert(\"-- DELETE Comment Functionality COMMING SOON...\");\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}